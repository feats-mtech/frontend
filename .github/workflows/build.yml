name: fEATs frontend

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggers

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Lint
        run: |
          npm run lint

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

      # - name: Run tests
      #   run: npm run test

      - name: Install doctl
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container image
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/feats-frontend:latest .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: doctl registry login --expiry-seconds 1200

      # Docker steps to run only when merged to main
      - name: get-npm-version
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Push Docker image (latest) to DigitalOcean Container Registry
        # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.REGISTRY_NAME }}/feats-frontend:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ secrets.REGISTRY_NAME }}/feats-frontend:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker image (version) to DigitalOcean Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.REGISTRY_NAME }}/feats-frontend:latest ${{ secrets.REGISTRY_NAME }}/feats-frontend:${{ steps.package-version.outputs.current-version}}
          docker push ${{ secrets.REGISTRY_NAME }}/feats-frontend:${{ steps.package-version.outputs.current-version}}

  update-image-version:
    needs: ci

    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
      - uses: actions/checkout@v4

      - name: get-npm-version
        if: github.ref == 'refs/heads/main'
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Clone target repository
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Cloning repository..."
          git clone https://x-access-token:${{ secrets.TARGET_REPO_TOKEN }}@github.com/dmss-group3-practice-module/deployment.git
          echo "Cloned repository, checking structure:"
          ls -la deployment

      - name: Update image version in Kubernetes YML
        if: github.ref == 'refs/heads/main'
        run: |
          cd deployment
          sed -i "s|image: registry.digitalocean.com/group3/feats-frontend:[^ ]*|image: registry.digitalocean.com/group3/feats-frontend:$IMAGE_VERSION|" k8s/test/frontend-test.yml
          cat k8s/test/frontend-test.yml
          echo "Updated the image version in frontend-test.yml to $IMAGE_VERSION"
        env:
          IMAGE_VERSION: ${{ steps.package-version.outputs.current-version}}

      - name: Commit changes to the deployment repository
        if: github.ref == 'refs/heads/main'
        run: |
          cd deployment
          echo "Current directory: $(pwd)"
          git config --global user.email "pinardy.yang@gmail.com"
          git config --global user.name "GitHub Action"
          git add k8s/test/frontend-test.yml
          git commit -m "[frontend-test] update image version to ${{ env.IMAGE_VERSION }}"
        env:
          IMAGE_VERSION: ${{ steps.package-version.outputs.current-version}}

      - name: Pushes to deployment repository
        if: github.ref == 'refs/heads/main'
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: './deployment'
          destination-github-username: 'dmss-group3-practice-module'
          destination-repository-name: 'deployment'
          user-email: pinardy.yang@gmail.com
